<Window x:Class="TestController.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestController"
        mc:Ignorable="d"
        Title="MainWindow" Height="470" Width="839"
        ResizeMode="NoResize"
        Topmost="True"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedBottonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF58274A"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF58274A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF7A3065"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF7A3065"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="PouringMenuButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF58274A"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF58274A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF7A3065"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF7A3065"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <ImageBrush x:Key="CloseBtn_MouseOver" ImageSource="Images/Close_icon.png"/>
        <Style x:Key="ClosingWithoutFilling" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">


                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/Images/Close_icon.png"/>
                                    </Setter.Value>
                                </Setter>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#FF88316F"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF88316F"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#FF58274A"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF58274A"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="#FF58274A"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF58274A"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#FF58274A"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF58274A"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="#FF58274A"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF58274A"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="#FF58274A"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF58274A"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxColor" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Height="480" VerticalAlignment="Top">
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <LinearGradientBrush.RelativeTransform>
                    <TransformGroup>
                        <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                        <SkewTransform CenterX="0.5" CenterY="0.5"/>
                        <RotateTransform Angle="450" CenterX="0.5" CenterY="0.5"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </LinearGradientBrush.RelativeTransform>
                <GradientStop Color="#FF7A3065" Offset="1"/>
                <GradientStop Color="White"/>
                <GradientStop Color="#FF7A3065"/>
                <GradientStop Color="#FF7A3065" Offset="0.327"/>
                <GradientStop Color="#FFC1A0B8" Offset="0"/>
                <GradientStop Color="#FF965C85"/>
                <GradientStop Color="#FFA67698"/>
                <GradientStop Color="#FFA47295"/>
                <GradientStop Color="#FF813C6D" Offset="0.187"/>
                <GradientStop Color="#FF894876" Offset="0.077"/>
                <GradientStop Color="#FF975D86" Offset="0.013"/>
            </LinearGradientBrush>
        </Grid.Background>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="442*"/>
            <ColumnDefinition Width="397*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.ColumnSpan="2" Margin="0,0,0,10">

            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="46"/>

                <ColumnDefinition Width="12"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="18"/>
                <RowDefinition Height="37"/>
                <RowDefinition/>
            </Grid.RowDefinitions>


            <Button Style="{DynamicResource ClosingWithoutFilling}" x:Name="CloseBtn"
                        Grid.Row="1" BorderBrush="{x:Null}" Click="CloseBtn_Click" Grid.ColumnSpan="2" Margin="761,0,23,0">
                <Button.Background>
                    <ImageBrush ImageSource="/Images/Close_icon.png"/>
                </Button.Background>
            </Button>

        </Grid>
        <Grid x:Name="GridTestCreator" HorizontalAlignment="Left" Margin="226,58,0,39" Width="571" Visibility="Visible" Grid.ColumnSpan="2">
            <Grid.Background>
                <SolidColorBrush Color="#FFECDAE6" Opacity="0.5"/>
            </Grid.Background>
            <TextBox x:Name="TextBoxNameOfTest" HorizontalAlignment="Left" Height="25" TextWrapping="Wrap" VerticalAlignment="Top" Width="254" Margin="10,24,0,0" Text="Enter name of test" PreviewMouseDown="TextBoxNameOfTest_PreviewMouseDown" Visibility="Visible">
                <TextBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.7"/>
                </TextBox.Background>
            </TextBox>
            <Button Style="{DynamicResource RoundedBottonStyle}" x:Name="ButtonAddQuestion" Content="add question" Margin="452,103,19,245" Click="ButtonAddQuestion_Click" Visibility="Visible" Background="#FF7A3065" Foreground="#FFF9F9F9"/>
            <TextBox x:Name="TextBoxTextOfQuestion" TextWrapping="Wrap" Text="Enter text of question" Margin="10,66,134,246" PreviewMouseDown="TextBoxTextOfQuestion_PreviewMouseDown" Visibility="Visible">
                <TextBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.7"/>
                </TextBox.Background>
            </TextBox>
            <Button Style="{DynamicResource RoundedBottonStyle}" x:Name="ButtonAddAnswer" Content="add answer" HorizontalAlignment="Left" Height="25" Margin="452,143,0,0" VerticalAlignment="Top" Width="103" Click="ButtonAddAnswer_Click" Visibility="Visible" Background="#FF7A3065" Foreground="#FFF9F8F8"/>
            <TextBox x:Name="TextBoxTextOfAnswer" HorizontalAlignment="Left" Height="25" Margin="10,143,0,0" TextWrapping="Wrap" Text="Enter text of answer" VerticalAlignment="Top" Width="427" PreviewMouseDown="TextBoxTextOfAnswer_PreviewMouseDown" Visibility="Visible">
                <TextBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.7"/>
                </TextBox.Background>
            </TextBox>
            <WrapPanel x:Name="WrapPanelAnswers" HorizontalAlignment="Left" Height="170" Margin="10,186,0,0" VerticalAlignment="Top" Width="427" Orientation="Vertical" Visibility="Hidden">
                <WrapPanel.Background>
                    <SolidColorBrush Color="White" Opacity="0.7"/>
                </WrapPanel.Background>
            </WrapPanel>
            <Button Style="{DynamicResource RoundedBottonStyle}" x:Name="ButtonCreateTest" Content="CREATE TEST" HorizontalAlignment="Left" Height="48" Margin="452,308,0,0" VerticalAlignment="Top" Width="103" Click="ButtonCreateTest_Click" FontSize="12" Visibility="Visible" Background="#FF7A3065" Foreground="White"/>
            <ComboBox Style="{DynamicResource ComboBoxColor}" x:Name="ComboBoxSelectTypeOfAnswer" HorizontalAlignment="Left" Height="25" Margin="269,24,0,0" VerticalAlignment="Top" Width="168" Visibility="Visible"  SelectionChanged="ComboBoxSelectTypeOfAnswer_SelectionChanged">
                <ComboBox.Background>
                    <LinearGradientBrush EndPoint="0,1" Opacity="0.7">
                        <GradientStop Color="#FFF0F0F0"/>
                        <GradientStop Color="#FFE5E5E5" Offset="1"/>
                    </LinearGradientBrush>
                </ComboBox.Background>
                <ComboBoxItem Content="One answer question"/>
                <ComboBoxItem Content="Several answer question"/>
                <ComboBoxItem Content="Sort answer question"/>
                <ComboBoxItem Content="Open answer question"/>
            </ComboBox>
        </Grid>
        <Grid HorizontalAlignment="Left" Height="497" VerticalAlignment="Top" Width="226">
            <Button Style="{DynamicResource PouringMenuButton}" x:Name="ButtonTestCreator" Content="Test creator" Margin="0,81,0,341" Click="ButtonTestCreator_Click" RenderTransformOrigin="0.494,0.515" Background="#FF7A3065" BorderBrush="#00000000" Foreground="White" FontSize="18" HorizontalAlignment="Center" Width="220"/>
            <Button Style="{DynamicResource PouringMenuButton}" x:Name="ButtonPollCreator" Content="Poll creator" Margin="0,156,0,266" Background="#FF7A3065" BorderBrush="{x:Null}" Foreground="White" FontSize="18" HorizontalAlignment="Center" Width="219" Click="ButtonPollCreator_Click"/>
            <Button Style="{DynamicResource PouringMenuButton}" x:Name="ButtonTestsAndPolls" Content="      Tests and Polls" Margin="0,306,0,115" Background="#FF7A3065" BorderBrush="{x:Null}" Foreground="White" FontSize="18" AutomationProperties.IsOffscreenBehavior="Onscreen" Click="ButtonTestsAndPolls_Click"/>
            <Button Style="{DynamicResource PouringMenuButton}" x:Name="ButtonUsers" Content="Users" Margin="0,380,0,55" Background="#FF7A3065" BorderBrush="{x:Null}" Foreground="#FFF3EEEE" FontSize="18" HorizontalAlignment="Center" Width="218"/>
            <Button Style="{DynamicResource PouringMenuButton}" x:Name="ButtonTGCheckChat" Content="    TGCheckChat" Margin="0,231,0,191" Click="ButtonTGCheckChat_Click" Background="#FF7A3065" BorderBrush="{x:Null}" Foreground="White" FontSize="18" FontWeight="Regular" FontStyle="Normal" HorizontalAlignment="Center" Width="219"/>
            <Image x:Name="TG_icon" HorizontalAlignment="Left" Height="30" Margin="8,254,0,0" VerticalAlignment="Top" Width="32" Source="/Images/chat_icon.png"/>
            <Image x:Name="Test_icon1" HorizontalAlignment="Left" Height="32" Margin="8,328,0,0" VerticalAlignment="Top" Width="32" Source="/Images/folder_document_multimedia_icon.png"/>
            <Image x:Name="Users_icon" HorizontalAlignment="Left" Height="28" Margin="12,404,0,0" VerticalAlignment="Top" Width="28" Source="/Images/users_people_icon.png"/>
            <Image HorizontalAlignment="Left" Height="32" Margin="8,178,0,0" VerticalAlignment="Top" Width="30" Source="/Images/poll_icon.png"/>
            <Image x:Name="TG_icon_Copy" HorizontalAlignment="Left" Height="30" Margin="8,104,0,0" VerticalAlignment="Top" Width="32" Source="/Images/document_icon.png"/>
        </Grid>
        <Image x:Name="LogoImage" HorizontalAlignment="Left" Height="55" VerticalAlignment="Top" Width="190" Source="/Images/LOGO5-removebg-preview.png" Margin="10,21,0,0" RenderTransformOrigin="0.5,0.646"/>



        <Grid x:Name="GridTests" HorizontalAlignment="Left" Height="383" Margin="222,58,0,0" VerticalAlignment="Top" Width="574" RenderTransformOrigin="0.492,0.513" Grid.ColumnSpan="2" Visibility="Hidden"
              >
            <Grid.Background>
                <SolidColorBrush Color="#FFECDAE6" Opacity="0.5"/>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <ComboBox Style="{DynamicResource ComboBoxColor}" x:Name="ComboBoxChoiseTheTest" HorizontalAlignment="Left" Height="25" Margin="163,68,0,0" VerticalAlignment="Top" Width="100" DisplayMemberPath="">
                <Button Content="Test1" IsDefault="True"/>
            </ComboBox>
            <ListBox x:Name="ListBoxTListOfTestNames" HorizontalAlignment="Left" Height="255" Margin="15,101,0,0"  VerticalAlignment="Top" Width="248" >
                <ListBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.705"/>
                </ListBox.Background>
                <ListBox.BorderBrush>
                    <SolidColorBrush Color="#FF7A3065" Opacity="0.7"/>
                </ListBox.BorderBrush>
                <ListBox.Foreground>
                    <SolidColorBrush Color="White" Opacity="0.7"/>
                </ListBox.Foreground>
            </ListBox>
            <Label x:Name="LabelChooseTest" Content="Choose a Test" HorizontalAlignment="Left" Height="31" Margin="15,35,0,0" VerticalAlignment="Top" Width="132" FontSize="16" FontWeight="Bold" Foreground="WhiteSmoke"/>
            <ComboBox Style="{DynamicResource ComboBoxColor}" x:Name="ComboBoxChoiseThePoll" HorizontalAlignment="Left" Height="25" Margin="457,68,0,0" VerticalAlignment="Top" Width="100" DisplayMemberPath="">
                <Button Content="Poll1"/>
            </ComboBox>
            <Label x:Name="LabelChoosePoll" Content="Choose a Poll" HorizontalAlignment="Left" Height="31" Margin="309,35,0,0" VerticalAlignment="Top" Width="129" FontWeight="Bold" Foreground="White" FontSize="16"/>
            <ListBox x:Name="ListBoxTListofPolls" HorizontalAlignment="Left" Height="255" Margin="309,101,0,0"  VerticalAlignment="Top" Width="248" Foreground="White" BorderBrush="#FF7A3065">
                <ListBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.7"/>
                </ListBox.Background>
            </ListBox>
            <Button Style="{DynamicResource RoundedBottonStyle}" x:Name="ButtonRedactTest" Content="Redact Test" HorizontalAlignment="Left" Height="25" Margin="15,68,0,0" VerticalAlignment="Top" Width="132" Background="#FF7A3065" Foreground="White"/>
            <Button Style="{DynamicResource RoundedBottonStyle}" x:Name="ButtonRedactPoll" Content="Redact Poll" HorizontalAlignment="Left" Height="25" Margin="309,68,0,0" VerticalAlignment="Top" Width="129" Background="#FF7A3065" Foreground="White"/>
        </Grid>
        <Grid x:Name="GridPollCreator" HorizontalAlignment="Left" Height="383" Margin="222,58,0,0" VerticalAlignment="Top" Width="574" Visibility="Hidden" Grid.ColumnSpan="2">
            <Grid.Background>
                <SolidColorBrush Color="#FFECDAE6" Opacity="0.5"/>
            </Grid.Background>
            <TextBox x:Name="TextBoxNameOfPoll" HorizontalAlignment="Left" Height="25" TextWrapping="Wrap" VerticalAlignment="Top" Width="214" Margin="10,25,0,0" Text="Enter name of poll">
                <TextBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.7"/>
                </TextBox.Background>
            </TextBox>
            <TextBox x:Name="TextBoxTextOfPoll" TextWrapping="Wrap" Text="Enter text of Poll" Margin="10,66,137,244">
                <TextBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.7"/>
                </TextBox.Background>
            </TextBox>
            <Button Style="{DynamicResource RoundedBottonStyle}" x:Name="ButtonAddVariant" Content="add variant" HorizontalAlignment="Left" Height="25" Margin="454,144,0,0" VerticalAlignment="Top" Width="103" Background="#FF7A3065" Foreground="White"/>
            <TextBox x:Name="TextBoxVariantsOfPoll" HorizontalAlignment="Left" Height="25" Margin="10,145,0,0" TextWrapping="Wrap" Text="Enter variants of poll" VerticalAlignment="Top" Width="427">
                <TextBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.7"/>
                </TextBox.Background>
            </TextBox>
            <WrapPanel x:Name="WrapPanelVariants" HorizontalAlignment="Left" Height="152" Margin="10,186,0,0" VerticalAlignment="Top" Width="427" Orientation="Vertical" RenderTransformOrigin="0.487,0.516">
                <WrapPanel.Background>
                    <SolidColorBrush Color="White" Opacity="0.7"/>
                </WrapPanel.Background>
            </WrapPanel>
            <Button Style="{DynamicResource RoundedBottonStyle}" x:Name="ButtonCreatePoll" Content="CREATE POLL" HorizontalAlignment="Left" Height="46" Margin="454,292,0,0" VerticalAlignment="Top" Width="103" FontSize="12" Click="ButtonCreatePoll_Click" Background="#FF7A3065" Foreground="White"/>
        </Grid>
        <Grid x:Name="GridTGCheckChat" Grid.ColumnSpan="2" HorizontalAlignment="Left" Height="383" Margin="222,58,0,0" VerticalAlignment="Top" Width="575" Visibility="Hidden">
            <Grid.Background>
                <SolidColorBrush Color="#FFECDAE6" Opacity="0.50"/>
            </Grid.Background>
            <Label x:Name="LabelUConnectedUsers" Content="Connected Users:" HorizontalAlignment="Left" Height="24" Margin="45,16,0,0" VerticalAlignment="Top" Width="110" Background="Transparent" Foreground="#FFF9F9F9" FontWeight="Bold"/>
            <Label x:Name="LabelChooseTestPoll" Content="Choose test or poll" HorizontalAlignment="Left" Height="24" Margin="231,16,0,0" VerticalAlignment="Top" Width="126" Foreground="White" FontWeight="Bold"/>
            <Label x:Name="LabelReciever" Content="Reciever" HorizontalAlignment="Left" Height="24" Margin="446,16,0,0" VerticalAlignment="Top" Width="61" FontWeight="Bold" Foreground="White"/>
            <ListBox x:Name="ListBoxUConnectedUsers" HorizontalAlignment="Left" Height="251" Margin="27,45,0,0" VerticalAlignment="Top" Width="146" d:ItemsSource="{d:SampleData ItemCount=5}" FontWeight="Normal">
                <ListBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.7"/>
                </ListBox.Background>
            </ListBox>
            <ComboBox Style="{DynamicResource ComboBoxColor}" x:Name="ComboBoxTestOrPoll" HorizontalAlignment="Center" Height="25" Margin="0,45,0,0" VerticalAlignment="Top" Width="196" SizeChanged="ComboBoxTestOrPoll_SelectionChanged">
                <ComboBoxItem Content="TEST"/>
                <ComboBoxItem Content="POLL"/>
            </ComboBox>
            <ComboBox Style="{DynamicResource ComboBoxColor}" x:Name="ComboBoxTstPllSelected" HorizontalAlignment="Center" Height="25" Margin="0,80,0,0" VerticalAlignment="Top" Width="196"/>
            <Button Style="{DynamicResource RoundedBottonStyle}" x:Name="ButtonStartTest" Content="Start Test or Poll" HorizontalAlignment="Center" Height="25" Margin="0,117,0,0" VerticalAlignment="Top" Width="194" Background="#FF7A3065" Foreground="White"/>
            <Label x:Name="LabelSender" Content="Send message" HorizontalAlignment="Center" Height="28" Margin="0,142,0,0" VerticalAlignment="Top" Width="100" FontWeight="Bold" Foreground="#FFFFFDFD"/>
            <TextBox x:Name="TextBoxTGSender" HorizontalAlignment="Center" Height="126" Margin="0,170,0,0" TextWrapping="Wrap" Text="Send your message" VerticalAlignment="Top" Width="196">
                <TextBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.702"/>
                </TextBox.Background>
            </TextBox>
            <Button Style="{DynamicResource RoundedBottonStyle}" x:Name="ButtonSend" Content="Send" HorizontalAlignment="Left" Height="26" Margin="288,302,0,0" VerticalAlignment="Top" Width="98" Background="#FF7A3065" Foreground="#FFFBFBFB"/>
            <Button Style="{DynamicResource RoundedBottonStyle}" x:Name="ButtonStart" Content="Start" HorizontalAlignment="Left" Height="25" Margin="27,303,0,0" VerticalAlignment="Top" Width="146" Click="ButtonStart_Click" Background="#FF7A3065" Foreground="White"/>
            <Button Style="{DynamicResource RoundedBottonStyle}" x:Name="ButtonStop" Content="Stop" HorizontalAlignment="Left" Height="35" Margin="27,338,0,0" VerticalAlignment="Top" Width="146" Foreground="White" Background="#FF7A3065" />
            <ListBox x:Name="ListBoxLBTGCheckChat" HorizontalAlignment="Left" Height="251" Margin="404,45,0,0" VerticalAlignment="Top" Width="146" d:ItemsSource="{d:SampleData ItemCount=5}">
                <ListBox.Background>
                    <SolidColorBrush Color="White" Opacity="0.7"/>
                </ListBox.Background>
            </ListBox>
        </Grid>
    </Grid>
</Window>
